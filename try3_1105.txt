import time
import pandas as pd
import numpy as np

CITY_DATA = { 'chicago': r'C:\Users\Eva\Documents\Udacity\Bikeshares Project\chicago.csv',
              'new york city': r'C:\Users\Eva\Documents\Udacity\Bikeshares Project\new_york_city.csv',
              'washington': r'C:\Users\Eva\Documents\Udacity\Bikeshares Project\washington.csv' }



def get_filters():
    """
    Asks user to specify a city, month, and day to analyze.

    Returns:
        (str) city - name of the city to analyze
        (str) month - name of the month to filter by, or "all" to apply no month filter
        (str) day - name of the day of week to filter by, or "all" to apply no day filter
    """
    print('Hello! Let\'s explore some US bikeshare data!')
    #get user input for city (chicago, new york city, washington). HINT: Use a while loop to handle invalid inputs
    city = ''
    while True:
        city = input("\nWhich city would you like to analyze?\n")
        if city.strip() == 'chicago' or city.strip() == 'Chicago':
            city = ('chicago')
            break
        elif city.strip() == 'washington' or city.strip() == 'Washington':
            city = ('washington')
            break
        elif city.strip() == 'new york city' or city.strip() == 'New York City':
            city = ('new york city')
            break
        else:
            print('Please pick a valid city: New York City, Chicago or Washington')
    
    df['Start Time'] = df['Start Time'] = pd.to_datetime(df['Start Time'])
    df['month'] = df['Start Time'].dt.month
    df['day'] = df['Start Time'].dt.weekday_name
    
    month = ''
    while True:
        month = input("\nWhich month would you like to analyze?Input \"all\" to apply no month filter.\n")
        if month.lower() not in('all', 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'):
            print('\nThat input isn\'t valid.Please try again.\n')
            continue
        else:
            months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december']
            month = months.index(month) + 1
            break
            
    day = ''
    while True:
        day = str(input("\nFor which day would you like to see the data? Input \"all\" to apply no day filter.\n"))
        if day.lower() not in ('all', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'):
            print ('\nThat input isn\'t valid.Please try again.\n')
            continue
        else:
            day = day.lower()
            break
             
           
    print('-'*40)
    return city, month, day
get_filters()

def load_data(city, month, day):
    """
    Loads data for the specified city and filters by month and day if applicable.

    Args:
        (str) city - name of the city to analyze
        (str) month - name of the month to filter by, or "all" to apply no month filter
        (str) day - name of the day of week to filter by, or "all" to apply no day filter
    Returns:
        df - Pandas DataFrame containing city data filtered by month and day
    """
    df = pd.read_csv(CITY_DATA[city])

    return df

def time_stats(df):
    """Displays statistics on the most frequent times of travel."""

    print('\nCalculating The Most Frequent Times of Travel...\n')
    start_time = time.time()

    # display the most common month
    pop_month = load_data['month'].mode()[0]
    print ('\n the most common month is {'pop_month'}.\n')

    # display the most common day of week
    pop_day = load_data['day'].mode()[0]
    print ('\n the most common day is {'pop_day'}.\n')

    # display the most common start hour
    pop_hour = load_data['hour'].mode()[0]
    print ('\n the most common hour is {'pop_hour'}.\n')

    print("\nThis took %s seconds." % (time.time() - start_time))
    print('-'*40)